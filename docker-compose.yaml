version: '3'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      - SERVERFULL_RUNTIME_HTTPSERVER_ADDRESS=:8081
      - SERVERFULL_RUNTIME_CONNSTATE_REPORTINTERVAL=5s
      - SERVERFULL_RUNTIME_CONNSTATE_HIJACKEDCOUNTER=http.server.connstate.hijacked
      - SERVERFULL_RUNTIME_CONNSTATE_CLOSEDCOUNTER=http.server.connstate.closed
      - SERVERFULL_RUNTIME_CONNSTATE_IDLEGAUGE=http.server.connstate.idle.gauge
      - SERVERFULL_RUNTIME_CONNSTATE_IDLECOUNTER=http.server.connstate.idle
      - SERVERFULL_RUNTIME_CONNSTATE_ACTIVEGAUGE=http.server.connstate.active.gauge
      - SERVERFULL_RUNTIME_CONNSTATE_ACTIVECOUNTER=http.server.connstate.active
      - SERVERFULL_RUNTIME_CONNSTATE_NEWGAUGE=http.server.connstate.new.gauge
      - SERVERFULL_RUNTIME_CONNSTATE_NEWCOUNTER=http.server.connstate.new
      - SERVERFULL_RUNTIME_LOGGER_OUTPUT=STDOUT
      - SERVERFULL_RUNTIME_LOGGER_LEVEL=INFO
      - SERVERFULL_RUNTIME_STATS_OUTPUT=NULL
      - SERVERFULL_RUNTIME_SIGNALS_INSTALLED=OS
      - SERVERFULL_RUNTIME_SIGNALS_OS_SIGNALS=15 2
      - AIAPI_POSTGRES_URL=postgres://user:password@postgres/assetmgmt?sslmode=disable
  gateway:
    build:
      context: .
      dockerfile: gateway.Dockerfile
    ports:
      - "8080:8080"
  postgres:
    image: postgres:11.2
    ports:
      - "5432:5432"
    environment:
      # while env var names are quite similar to `test` service above, it's just a coincidence
      - "POSTGRES_PASSWORD=password"
      - "POSTGRES_USER=user"
      - "POSTGRES_DB=assetmgmt"
      - "PGDATA=/var/lib/postgresql/data/pgdata11"
      - "POSTGRES_PORT=5432"
    volumes:
      - ./tests/test-data/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./tests/test-data/data.sql:/docker-entrypoint-initdb.d/2-data.sql
    command:
      - "postgres"
      - "-c"
      - "port=5432"
