// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/domain/storage.go

// Package v1 is a generated GoMock package.
package v1

import (
	context "context"
	reflect "reflect"

	domain "github.com/asecurityteam/asset-inventory-api/pkg/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockStorage is a mock of Storage interface
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// StoreCloudAsset mocks base method
func (m *MockStorage) StoreCloudAsset(arg0 context.Context, arg1 domain.CloudAssetChanges) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreCloudAsset", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreCloudAsset indicates an expected call of StoreCloudAsset
func (mr *MockStorageMockRecorder) StoreCloudAsset(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreCloudAsset", reflect.TypeOf((*MockStorage)(nil).StoreCloudAsset), arg0, arg1)
}
