// Automatically generated by MockGen. DO NOT EDIT!
// Source: ./pkg/domain/storage.go

package storage

import (
	context "context"

	"github.com/asecurityteam/asset-inventory-api/pkg/domain"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Storage interface
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *_MockStorageRecorder
}

// Recorder for MockStorage (not exported)
type _MockStorageRecorder struct {
	mock *MockStorage
}

func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &_MockStorageRecorder{mock}
	return mock
}

func (_m *MockStorage) EXPECT() *_MockStorageRecorder {
	return _m.recorder
}

func (_m *MockStorage) StoreCloudAsset(_param0 context.Context, _param1 domain.CloudAssetChanges) error {
	ret := _m.ctrl.Call(_m, "StoreCloudAsset", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockStorageRecorder) StoreCloudAsset(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "StoreCloudAsset", arg0, arg1)
}
